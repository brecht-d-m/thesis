{
  "name": "access-log",
  "description": "Add simple access logs to any http or https server",
  "version": "0.3.9",
  "author": {
    "name": "Dave Eddy",
    "email": "dave@daveeddy.com",
    "url": "http://www.daveeddy.com"
  },
  "contributors": [],
  "repository": {
    "type": "git",
    "url": "git://github.com/bahamas10/node-access-log.git"
  },
  "scripts": {
    "test": "for f in test/*; do echo \"\n$f\"; node \"$f\" || exit 1; done; echo Passed; exit 0"
  },
  "main": "./index.js",
  "dependencies": {
    "strftime": "~0.6.2"
  },
  "bin": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "keywords": [
    "access",
    "apache",
    "clf",
    "logs"
  ],
  "readme": "access-log\n==========\n\nAdd simple access logs to any http or https server\n\nUsage\n-----\n\n``` js\nvar http = require('http');\nvar accesslog = require('access-log');\n\nhttp.createServer(function(req, res) {\n  accesslog(req, res);\n  res.end();\n}).listen(80, '0.0.0.0');\n```\n\nThis will automatically log requests as they come in to the\nweb server that look like...\n\n```\n127.0.0.1 - - [13/Sep/2013:01:38:09 -0400] \"GET / HTTP/1.1\" 200 - \"-\" \"-\"\n127.0.0.1 - - [13/Sep/2013:01:38:09 -0400] \"GET /testing HTTP/1.1\" 200 - \"-\" \"-\"\n127.0.0.1 - - [13/Sep/2013:01:38:10 -0400] \"GET /index.html HTTP/1.1\" 200 - \"-\" \"-\"\n```\n\nCustomization\n-------------\n\n### accesslog(req, res, [format], [function])\n\n#### format\n\nYou can pass in a format string, the default is Apache Common Log Format\nhttp://en.wikipedia.org/wiki/Common_Log_Format\n\n```\n:ip - :userID [:clfDate] \":method :url :protocol/:httpVersion\" :statusCode :contentLength \":referer\" \":userAgent\"\n```\n\n- `clfDate`: The date of the end of the response in Apache Common Log format\n- `contentLength`: The response `Content-Length` header, or `-` if unset\n- `delta`: The time in ms from request to response\n- `endDate`: The ISO formatted string when the response was ended\n- `endTime`: The epoch time when the response was ended\n- `host`: The host header from the request if set\n- `httpVersion`: The HTTP version used (ie. `1.0`, `1.1`)\n- `ip`: The remote IP\n- `Xip`: The remote IP, using `X-Forwarded-For` if set\n- `method`: The HTTP method\n- `protocol`: `HTTP` or `HTTPS`\n- `referer`: The request `Referer` header, or `-` if unset\n- `startDate`: The ISO formatted string when the request was received\n- `startTime`: The epoch time when the request was received\n- `statusCode`: The response status code sent from the server\n- `url`: The requested URL\n- `urlDecoded`: The decoded request URL (ie. `%20` => ` `)\n- `userID`: The username if applicable\n- `userAgent`: The request `User-Agent` header, or `-` if unset\n\n**NOTE:** Wrap variables in `{}` to protect against unwanted interpolation.\n\nex:\n\n```\nrequest to :url took :{delta}ms\n```\n\n#### function\n\nYou can also pass in your own custom callback, the default is `console.log`.\nThe only argument passed is the access log string\n\nExample\n-------\n\n``` js\nvar format = 'url=\":url\" method=\":method\" statusCode=\":statusCode\" delta=\":delta\" ip=\":ip\"';\n\naccesslog(req, res, format, function(s) {\n  console.log(s);\n});\n```\n\nyields\n\n```\nurl=\"/projects\" method=\"GET\" statusCode=\"200\" delta=\"0\" ip=\"127.0.0.1\"\nurl=\"/testing\" method=\"GET\" statusCode=\"200\" delta=\"1\" ip=\"127.0.0.1\"\nurl=\"/index.html\" method=\"GET\" statusCode=\"200\" delta=\"0\" ip=\"127.0.0.1\"\n```\n\nInstallation\n------------\n\n    npm install access-log\n\nExtend\n------\n\nConsider further customizing the access logs by using the [log-timestamp]\n(https://github.com/bahamas10/node-log-timestamp) module to prepend a timestamp\nautomatically.\n\nLicense\n-------\n\nMIT Licensed\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bahamas10/node-access-log/issues"
  },
  "_id": "access-log@0.3.9",
  "dist": {
    "shasum": "ff0755c67c26a36c47d240616d51f15d0f6481f9"
  },
  "_from": "access-log@^0.3.9",
  "_resolved": "https://registry.npmjs.org/access-log/-/access-log-0.3.9.tgz"
}
